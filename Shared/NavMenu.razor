@using messager.Services.Interfaces;
@using messager.models;
@inject IUserService _UserService; 
@inject NavigationManager NavigationManager
<style>
    .button-container {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        margin-top:50px; 
        padding:5px;
    }
    button{
    margin:20px;
        background-color: rgba(120, 0, 180, 0.6);
        border:none;
        border-radius:10px;
    }
</style>
@if(_User != null)
{
    <p>twoi znajomi:</p>
    @foreach(var user in UserList)
    {
        <button @onclick="@(() => RedirectToCshtml($"chat/{user.Id}"))">@user.UserName</button>
    }

}
else
{
  
    <div class="button-container">
        <button @onclick="@(() => RedirectToCshtml("account/login"))">Zaloguj się</button>
        <button @onclick="@(() => RedirectToCshtml("account/register"))">Zarejestruj się</button>
    </div>
}


@code {
    private bool collapseNavMenu = true;
    private List<UserModel> UserList;
    private UserModel _User;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    protected override async Task OnInitializedAsync()
    {
        _User = await _UserService.GetLoggedUser();
        if (_User != null)
        {
            UserList = await _UserService.GetUsers(_User.Id);
        }
    }
    private void RedirectToCshtml(string url)
    {
        NavigationManager.NavigateTo(url, forceLoad: true);
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    
}

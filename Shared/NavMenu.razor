@using messager.Services.Interfaces;
@using messager.models;
@inject HttpClient Http
@inject IUserService _UserService;
@inject NavigationManager NavigationManager
@inject AppDbContext _Context

<link href="css/style.css" rel="stylesheet">
@if (_User != null)
{
    <div class="button-container">
        <p>ostatnie wiadomosci:</p>
        @if (UserList != null && UserList.Count != 0)
        {
            @foreach (var user in UserList)
            {
                <button class="ButtonLayOut" @onclick="@(() => RedirectToCshtml($"chat/{user.Id}"))">@user.UserName</button>
            }
        }
    </div>
}


@code {
    private bool collapseNavMenu = true;
    private List<UserModel> UserList;
    private UserModel _User;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    protected override async Task OnInitializedAsync()
    {
        /*
        _User = await _UserService.GetLoggedUser(_Context);
        if (_User != null)
        {
            UserList = await Http.GetFromJsonAsync<List<UserModel>>($"api/Messenger/GetUsers?creatorId={_User.Id}");
        }
        */
    }
    private void RedirectToCshtml(string url)
    {
        NavigationManager.NavigateTo(url, forceLoad: true);
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

}

